<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/mvc 
              http://www.springframework.org/schema/mvc/spring-mvc.xsd
              http://www.springframework.org/schema/context 
              http://www.springframework.org/schema/context/spring-context.xsd
              http://www.springframework.org/schema/tx
       		  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
       		  http://www.springframework.org/schema/jee 
       		  http://www.springframework.org/schema/jee/spring-jee.xsd
       		  http://www.springframework.org/schema/aop 
  			  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
  			  http://www.springframework.org/schema/oxm
    		  http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
    		  http://www.springframework.org/schema/task 
    		  http://www.springframework.org/schema/task/spring-task-3.2.xsd
    		  http://www.springframework.org/schema/util 
    		  http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Property Placeholder Configurer -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:settings.properties</value>
		</property>
	</bean>
	<!-- Property Placeholder Configurer 
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
				<value>classpath:settings.properties</value>
		</property>
	</bean>  -->

	<!-- added this because I think it makes annotations work? -->
	<context:annotation-config />

	<!-- JSR-303 support will be detected on classpath and enabled automatically -->
	<mvc:annotation-driven />

	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<!-- <context:component-scan base-package="app.controller, app.service.impl, " /> -->
	<context:component-scan base-package="com">
		<context:include-filter type="regex"
			expression="(service|controller)\..*" />
	</context:component-scan>
	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 확장자와 contentType 을 연결해 준다. -->
		<property name="order" value="1" />
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.HeaderContentNegotiationStrategy">
                    </bean>
                </constructor-arg>
            </bean>
        </property>
		<!-- 위의 viewResolvers 에 의해 view를 얻지 못했을 경우에 사용되는 view -->
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
					<!-- Jsp 관편 뷰 페이지 파싱 -->
			</list>
		</property>
		<property name="defaultContentType" value="application/json" />
	</bean>

	<!-- BeanNameView는 추후 파일 업로드 시에 필요  
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />  -->
	
	<!-- Bean 관련 파싱 
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" /> 
	-->
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Json Message Converter -->
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- DB -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/skhu/mapper/impl/*.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- Mapper.java 매핑 시키는 역할 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.skhu.mapper" />
	</bean>

	<!-- transaction setting -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- jsoup -->
	<bean id="httpConnection" class="org.jsoup.helper.HttpConnection" />
	
	<bean id="docTask" class="com.skhu.job.DocumentThread" />
	
	<!-- quartz 
	<bean id="docTask" class="com.skhu.task.DocumentTask" />
		
	<bean name="quartzJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.skhu.job.DocumentJobBean" />
		<property name="jobDataAsMap">
		  <map>
			<entry key="docTask" value-ref="docTask" />
		  </map>
		</property>
	</bean>
	
	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"
		p:jobDetail-ref="quartzJob"
		p:repeatInterval="8000"
		p:repeatCount="0"
		p:startDelay="2000"/> -->
	<!--
	 <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
          p:jobDetail-ref="quartzJob"
          p:startDelay="1000"
          p:cronExpression="0 0/5 * * * ?"/> 
	
	 <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="autoStartup" value="true"/>
    </bean> -->
</beans>
